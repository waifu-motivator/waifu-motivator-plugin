name: Release
on:
  release:
    types: [prereleased, released]
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 11
      - name: Fetch Sources
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.release.tag_name }}
      - name: Publish Plugin
        run: ./gradlew publishPlugin
        env:
          # empty channel for default
          PUBLISH_CHANNEL:
          PUBLISH_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
      - name: Copy zip file for Github release
        run: cp build/distributions/*.zip waifu-motivator.zip
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: waifu-motivator.zip
          asset_name: waifu-motivator.zip
          asset_content_type: application/zip

  # Patch changelog, commit and push to the current repository
  changelog:
    name: Update Changelog
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 11

      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.release.tag_name }}

      # Update Unreleased section with the current version
      - name: Patch Changelog
        run: ./gradlew patchChangelog

      # Create pull request with the changes from the previous
      # action step.
      - name: Create Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION="${{ github.event.release.tag_name }}"
          BRANCH="chore/changelog-update-$VERSION"
          git config user.email "action@github.com"
          git config user.name "GitHub Action"
          git checkout -b $BRANCH
          git commit -am "docs: update changelog - $VERSION"
          git push --set-upstream origin $BRANCH
          gh pr create \
            --title "Changelog update - \`$VERSION\`" \
            --body "Current pull request contains patched \`CHANGELOG.md\` file for the \`$VERSION\` version." \
            --base main \
            --head $BRANCH
